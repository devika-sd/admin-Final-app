{"version":3,"sources":["Demo/Orders/OrderModel.js","Demo/Orders/Orders.js","Demo/Notification/Notification.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","padding","spacing","connect","state","message","orderReducer","dispatch","updateorderbyid","id","orderdata","orderactions","onGetorders","filter","props","console","log","order","classes","useState","modalStyle","open","setOpen","useParams","orderid","email","paytype","paymentStatus","paymentType","newdate","Date","orderDate","toLocaleString","dateTime","addresses","address","houseNumber","locality","city","country","pinCode","phonenumber","amount","status","setStatus","notify","setNotify","enable","setEnable","handleClose","Update","e","a","roleData","_id","onChangeRadio","target","value","booklist","books","map","book","i","key","quantity","isbn","includes","Notification","variant","msg","className","onClick","name","slice","length","Modal","aria-labelledby","aria-describedby","style","Card","margin","boxSizing","border","fontFamily","display","Header","float","fontSize","Title","as","Body","Text","Row","Col","md","Form","Group","controlId","Label","Control","type","placeholder","Table","striped","bordered","hover","Button","event","onChange","Check","label","sm","textAlign","marginTop","orders","totalorders","limit","pageno","setPageno","active","setActive","catogories","setCatogories","updatepagination","current","max","temparrr","temp","Math","floor","temparr","tempactive","pageNo","getOrders","useEffect","handleSelect","items","no","Pagination","Item","changePage","tabContent","data","href","DEMO","BLANK_LINK","src","avatar2","alt","xl","Tabs","defaultActiveKey","onSelect","activeKey","Tab","eventKey","title","First","Prev","Next","Last","Alert","elevation","root","CustomizedSnackbars","React","vertical","horizontal","reason","autoHideDuration","onClose","anchorOrigin","severity"],"mappings":"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","file":"static/js/15.30b164b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\nimport * as orderactions from '../../Actions/order-action';\r\nimport Notification from '../Notification/Notification';\r\n\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '1000px',\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Ordermodel(props) {\r\n    console.log(props.order);\r\n    const classes = useStyles();\r\n    var [modalStyle] = useState(getModalStyle);\r\n    var [open, setOpen] = useState(false);\r\n    let { orderid } = useParams();\r\n    const [email, setemail] = useState(props.order.email);\r\n    var paytype = props.order.paymentStatus ? \"Online\" : \"COD\"\r\n    const [paymentType, setPayment] = useState(paytype);\r\n    let newdate = new Date(props.order.orderDate);\r\n    const [dateTime, setDateTime] = useState(newdate.toLocaleString());\r\n    var addresses = props.order.address.houseNumber + \",\" + props.order.address.locality + \",\" + props.order.address.city + \",\" + props.order.address.state + ',' + props.order.address.country + ',' + props.order.address.pinCode;\r\n    const [address, setAddress] = useState(addresses);\r\n    const [phonenumber, setContact] = useState(props.order.phonenumber);\r\n    const [amount, setAmount] = useState(props.order.amount);\r\n    const [bookname, setBookname] = useState('');\r\n    const [status, setStatus] = useState(props.order.status);\r\n    const [notify,setNotify] = useState(false);\r\n\r\n    const [enable, setEnable] = useState(true)\r\n\r\n\r\n    const handleopen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setNotify(false);\r\n    }\r\n\r\n    const checkClose = () => {\r\n        handleClose();\r\n    }\r\n\r\n    const Update = async (e) => {\r\n        setNotify(true);\r\n        let roleData = { status: status }\r\n        console.log(roleData)\r\n        setEnable(true)\r\n        await props.updateorderbyid(props.order._id, roleData)\r\n        await props.onGetorders(\"\");\r\n    }\r\n    const Edit = (event) => {\r\n        console.log('Edit')\r\n        setEnable(false)\r\n    }\r\n    const cancel = (event) =>{\r\n        console.log('cancel')\r\n        setEnable(true)\r\n        handleClose();\r\n    }\r\n\r\n    const onChangeRadio = (e) => {\r\n        console.log(e.target.value);\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    var booklist = props.order.books.map((book, i) => {\r\n        return (\r\n            <tr key={i}>\r\n                <td> {book.quantity} </td>\r\n                <td> {book.isbn} </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.message.includes('updated')&&notify ? <Notification open={true} variant='success' msg={props.message}/> : null}\r\n\r\n            <button className=\"btn\" onClick={handleopen}><span className=\"float-right d-flex  align-items-center\">{props.name.slice(props.name.length - 6, props.name.length)}&nbsp;<i className=\"fa fa-info-circle f-22 m-r-10 text-c-green\" /></span></button>\r\n            <Modal\r\n                open={open}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modalStyle} className={classes.paper+' ordermodel'}>\r\n                    <Card className=\"border border-muted\" style={{\r\n                        padding: '10px 15px',\r\n                        margin: '15px auto',\r\n                        boxSizing: 'border-box',\r\n                        border: 'none',\r\n                        width: '90%',\r\n                        fontFamily: 'monospace',\r\n                        display: 'block'\r\n                    }}>\r\n\r\n                        <Card.Header>\r\n                            <i className=\"fa fa-times\" style={{ float: 'right', fontSize: '20px' }} onClick={checkClose}></i>\r\n                            <Card.Title as=\"h5\">\r\n                                <h4>Order List</h4>\r\n                            </Card.Title>\r\n                            {/* <hr></hr> */}\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n\r\n                                {/* Disabled */}\r\n                                {enable &&\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={email} placeholder=\"Enter Email\" />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Payment Type</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={paymentType} placeholder=\"Enter Payment type\" />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Status</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={status} placeholder=\"Enter Status\" />\r\n                                                </Form.Group>\r\n\r\n\r\n                                            </Form>\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Date Time</Form.Label>\r\n                                                <Form.Control type=\"text\" value={dateTime} placeholder=\"Enter Date and time\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Amount</Form.Label>\r\n                                                <Form.Control type=\"text\" value={amount} placeholder=\"Enter Address\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address</Form.Label>\r\n                                                <Form.Control as=\"textarea\" value={address} placeholder=\"Enter Address\" />\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        \r\n                                        <Table striped bordered hover style={{ width:\"100%\",margin:'10px' }}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Quantity</th>\r\n                                                    <th>ISBN</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {booklist}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <Button style={{ width: \"90px\", margin: 'auto' }} onClick={Edit} variant=\"primary\">EDIT</Button>\r\n                                    </Row>\r\n                                }\r\n\r\n                                {!enable &&\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Status</Form.Label>\r\n                                                </Form.Group>\r\n                                            </Form>\r\n                                        </Col>\r\n\r\n                                        <Col md={3} key='status' onChange={onChangeRadio}>\r\n\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='New'\r\n                                                value='new'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Packed'\r\n                                                value='packed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Shipped'\r\n                                                value='shipped'\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={2} key='status' onChange={onChangeRadio}>\r\n\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Completed'\r\n                                                value='completed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Delayed'\r\n                                                value='delayed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Cancelled'\r\n                                                value='cancelled'\r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm={12} md={12} style={{width:'100%',textAlign:'center'}}>\r\n                                            <div style={{marginTop:'50px'}}>\r\n                                            <Button style={{ width: \"90px\", marginTop: '50px', margin:'10px' }} onClick={cancel} variant=\"primary\">CANCEL</Button>\r\n                                            <Button style={{ width: \"90px\", marginTop: '50px', margin:'10px'  }} onClick={Update} variant=\"primary\">UPDATE</Button>\r\n\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.orderReducer.message\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateorderbyid: (id, orderdata) => dispatch(orderactions.updateorders(id, orderdata)),\r\n        onGetorders: (filter) => dispatch(orderactions.fetchorders(filter))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ordermodel);","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Tabs, Tab, Card, Table } from 'react-bootstrap';\r\n\r\nimport DEMO from \"../../store/constant\";\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\n\r\nimport Ordermodel from './OrderModel';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport * as orderactions from '../../Actions/order-action';\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nfunction Orders(props) {\r\n    // this.state = { users: [], word: '', active: 1, maxpage: 1, limit: 5, pageno: [1, 2, 3], open: false }\r\n    const [limit, setLimit] = useState(5)\r\n    // const [maxpage, setMaxpage] = useState(1)\r\n    const [pageno, setPageno] = useState([1, 2, 3])\r\n    const [active, setActive] = useState(1)\r\n    const [catogories,setCatogories] = useState('all');\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            await getOrders()\r\n\r\n        })();\r\n        // await props.onGetorders(\"page=\" + active + \"&limit=\" + limit);\r\n\r\n    }, [active,catogories])\r\n\r\n    async function updatepagination(current) {\r\n        console.log(\"current:****************************\" + current);\r\n        var max = 1;\r\n        max = (props.totalorders / limit)\r\n        console.log(\"*******************************Max******************\" + max);\r\n        console.log(props.totalorders);\r\n\r\n        // setMaxpage(max)\r\n        // console.log(maxpage);\r\n        if (current === 'initial') {\r\n            let temparrr = [1, 2, 3];\r\n            // await this.setState({ pageno: temparrr, active: 1 });\r\n            await setPageno(temparrr)\r\n            await setActive(1)\r\n        }\r\n        if (current === 'final') {\r\n            let temp = max > Math.floor(props.totalorders / limit) ? Math.floor(max) + 1 : Math.floor(max);\r\n            // let temp = max\r\n\r\n            let temparrr = [temp - 2, temp - 1, temp];\r\n            // await this.setState({ pageno: temparrr, active: temp });\r\n            await setPageno(temparrr)\r\n            await setActive(temp)\r\n        }\r\n        if (pageno[2] < max) {\r\n            if (current === \"next\") {\r\n                var temparr = [...pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] + 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                // await this.setState({ pageno: temparr, active: tempactive });\r\n                await setPageno(temparr)\r\n                await setActive(tempactive)\r\n            }\r\n        }\r\n        if (current === \"prev\") {\r\n            if (pageno[0] !== 1) {\r\n                var temparr = [...pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] - 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                // await this.setState({ pageno: temparr, active: tempactive });\r\n                await setPageno(temparr)\r\n                await setActive(tempactive)\r\n            }\r\n        }\r\n    }\r\n\r\n    async function changePage(pageNo) {\r\n        await setActive(pageNo)\r\n        console.log(\"****************************\" + pageNo);\r\n    }\r\n    async function getOrders() {\r\n        if(catogories === 'all')\r\n        {\r\n            await props.onGetorders(\"page=\" + active + \"&limit=\" + limit);\r\n        }\r\n        else\r\n        {\r\n            await props.onGetorders(\"page=\" + active + \"&limit=\" + limit+'&status='+catogories); \r\n        }\r\n    }\r\n\r\n    const handleSelect = async (e) => {\r\n        console.log(\"&&&&&&&&&&&&&&&&&&&&\" + e);\r\n        if (e === 'all') {\r\n            await setActive(1);\r\n            await setCatogories('all');\r\n            // await props.onGetorders(\"page=\" + active + \"&limit=\" + limit);\r\n        }\r\n        else {\r\n            await setActive(1);\r\n            await setCatogories(e);\r\n            // await props.onGetorders(\"status=\" + e+\"&page=\" + active + \"&limit=\" + limit);\r\n        }\r\n    }\r\n\r\n    let items = pageno.map((no, i) => {\r\n        return (\r\n            <Pagination.Item key={i} onClick={() => changePage(no)} active={no === active}>\r\n                {no}\r\n            </Pagination.Item>\r\n        )\r\n    })\r\n\r\n    let tabContent = props.orders.map((data, i) => {\r\n        console.log(data.paymentStatus);\r\n        return (\r\n            <Aux key={i}>\r\n                {/* <td><Link to={'/operations/' + data.id}>{data.id}</Link></td> */}\r\n                {/* <Ordermodel name={data._id} order={data}></Ordermodel> */}\r\n\r\n                <div className=\"media friendlist-box align-items-center justify-content-center m-b-25\">\r\n                    <div className=\"photo-table\">\r\n                        <a href={DEMO.BLANK_LINK}><img className=\"rounded-circle\" style={{ width: '40px' }} src={avatar2} alt=\"activity-user\" /></a>\r\n                    </div>\r\n                    <div className=\"media-body\">\r\n                        <Col><h6 className=\"m-0 d-inline\">{data.email}</h6></Col>\r\n                        <Col><span className=\"m-0 d-inline\">{data.status}</span>\r\n                            <span className=\"float-right d-flex  align-items-center\"><Ordermodel name={data._id} order={data}/></span></Col>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <Aux>\r\n            <div>\r\n                <Col sm={6} md={12} xl={12} className='m-b-30'>\r\n                    <Card style={{ padding: \"10px\" }}>\r\n                        <Tabs defaultActiveKey=\"today\" id=\"uncontrolled-tab-example\" onSelect={handleSelect} activeKey={catogories}>\r\n                            <Tab>\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"all\" title=\"All\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"new\" title=\"New\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"packed\" title=\"packed\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"shipped\" title=\"shipped\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"completed\" title=\"completed\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"delayed\" title=\"delayed\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                            <Tab eventKey=\"cancelled\" title=\"cancelled\">\r\n                                {tabContent}\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Card>\r\n\r\n                </Col>\r\n                <div>\r\n                    <Pagination style={{ display: 'flex', width: '220px', margin: 'auto' }}>\r\n                        <Pagination.First onClick={() => updatepagination('initial')} />\r\n                        <Pagination.Prev onClick={() => updatepagination('prev')} />\r\n                        {items}\r\n                        <Pagination.Next onClick={() => updatepagination('next')} />\r\n                        <Pagination.Last onClick={() => updatepagination('final')} />\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.orderReducer.orders,\r\n        totalorders: state.orderReducer.totalorders\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetorders: (filter) => dispatch(orderactions.fetchorders(filter)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [variant,setVariant]= React.useState(props.variant);\r\n  const [msg,setMsg]= React.useState(props.msg);\r\n  const [state, setState] = React.useState({\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical, horizontal }}>\r\n        <Alert onClose={handleClose} severity={variant}>\r\n            {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}