{"version":3,"sources":["Demo/Orders/OrderModel.js","Demo/Notification/Notification.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","padding","spacing","connect","state","message","orderReducer","dispatch","updateorderbyid","id","orderdata","orderactions","onGetorders","filter","props","console","log","location","order","useState","user","history","useHistory","classes","modalStyle","open","setOpen","useParams","orderid","email","paytype","paymentStatus","paymentType","newdate","Date","orderDate","toLocaleString","dateTime","addresses","address","houseNumber","locality","city","country","pinCode","phonenumber","amount","status","setStatus","notify","setNotify","enable","setEnable","handleClose","push","Update","e","a","roleData","_id","onChangeRadio","target","value","booklist","books","map","book","i","key","quantity","isbn","includes","variant","msg","aria-labelledby","aria-describedby","style","className","margin","boxSizing","border","fontFamily","display","Header","float","fontSize","onClick","Title","as","Body","Text","md","Group","controlId","Label","Control","type","placeholder","striped","bordered","hover","event","onChange","Check","name","label","sm","textAlign","marginTop","Alert","elevation","root","CustomizedSnackbars","React","vertical","horizontal","reason","autoHideDuration","onClose","anchorOrigin","severity"],"mappings":"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","file":"static/js/15.db4454d2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { connect } from 'react-redux';\r\nimport * as orderactions from '../../Actions/order-action';\r\nimport Notification from '../Notification/Notification';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '1000px',\r\n        padding: theme.spacing(2, 4, 3)\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Ordermodel(props) {\r\n    console.log(props.location.order);\r\n    var [order,setOrder] = useState(props.location.order.user);\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    var [modalStyle] = useState(getModalStyle);\r\n    var [open, setOpen] = useState(true);\r\n    let { orderid } = useParams();\r\n    const [email, setemail] = useState(order.email);\r\n    var paytype = order.paymentStatus ? \"Online\" : \"COD\"\r\n    const [paymentType, setPayment] = useState(paytype);\r\n    let newdate = new Date(order.orderDate);\r\n    const [dateTime, setDateTime] = useState(newdate.toLocaleString());\r\n    var addresses = order.address.houseNumber + \",\" + order.address.locality + \",\" + order.address.city + \",\" + order.address.state + ',' + order.address.country + ',' + order.address.pinCode;\r\n    const [address, setAddress] = useState(addresses);\r\n    const [phonenumber, setContact] = useState(order.phonenumber);\r\n    const [amount, setAmount] = useState(order.amount);\r\n    const [bookname, setBookname] = useState('');\r\n    const [status, setStatus] = useState(order.status);\r\n    const [notify,setNotify] = useState(false);\r\n\r\n    const [enable, setEnable] = useState(true)\r\n\r\n\r\n    const handleopen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setNotify(false);\r\n        history.push('/orderlist');\r\n\r\n    }\r\n\r\n    const checkClose = () => {\r\n        handleClose();\r\n    }\r\n\r\n    const Update = async (e) => {\r\n        setNotify(true);\r\n        let roleData = { status: status }\r\n        console.log(roleData)\r\n        setEnable(true)\r\n        await props.updateorderbyid(order._id, roleData)\r\n        await props.onGetorders(\"\");\r\n    }\r\n    const Edit = (event) => {\r\n        console.log('Edit')\r\n        setEnable(false)\r\n    }\r\n    const cancel = (event) =>{\r\n        console.log('cancel')\r\n        setEnable(true)\r\n        handleClose();\r\n    }\r\n\r\n    const onChangeRadio = (e) => {\r\n        console.log(e.target.value);\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    var booklist = order.books.map((book, i) => {\r\n        return (\r\n            <tr key={i}>\r\n                <td> {book.quantity} </td>\r\n                <td> {book.isbn} </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.message.includes('updated')&&notify ? <Notification open={true} variant='success' msg={props.message}/> : null}\r\n\r\n            <Modal\r\n                open={open}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modalStyle} className={classes.paper+' ordermodel'}>\r\n                    <Card className=\"border border-muted\" style={{\r\n                        padding: '10px 15px',\r\n                        margin: '15px auto',\r\n                        boxSizing: 'border-box',\r\n                        border: 'none',\r\n                        width: '90%',\r\n                        fontFamily: 'monospace',\r\n                        display: 'block'\r\n                    }}>\r\n\r\n                        <Card.Header>\r\n                            <i className=\"fa fa-times\" style={{ float: 'right', fontSize: '20px' }} onClick={checkClose}></i>\r\n                            <Card.Title as=\"h5\">\r\n                                <h4>Order List</h4>\r\n                            </Card.Title>\r\n                            {/* <hr></hr> */}\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n\r\n                                {/* Disabled */}\r\n                                {enable &&\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Email</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={email} placeholder=\"Enter Email\" />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Payment Type</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={paymentType} placeholder=\"Enter Payment type\" />\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Status</Form.Label>\r\n                                                    <Form.Control type=\"text\" value={status} placeholder=\"Enter Status\" />\r\n                                                </Form.Group>\r\n\r\n\r\n                                            </Form>\r\n                                        </Col>\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Date Time</Form.Label>\r\n                                                <Form.Control type=\"text\" value={dateTime} placeholder=\"Enter Date and time\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Amount</Form.Label>\r\n                                                <Form.Control type=\"text\" value={amount} placeholder=\"Enter Address\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Address</Form.Label>\r\n                                                <Form.Control as=\"textarea\" value={address} placeholder=\"Enter Address\" />\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        \r\n                                        <Table striped bordered hover style={{ width:\"100%\",margin:'10px' }}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Quantity</th>\r\n                                                    <th>ISBN</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {booklist}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <Button style={{ width: \"90px\", margin: 'auto' }} onClick={Edit} variant=\"primary\">EDIT</Button>\r\n                                    </Row>\r\n                                }\r\n\r\n                                {!enable &&\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n                                            <Form>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Status</Form.Label>\r\n                                                </Form.Group>\r\n                                            </Form>\r\n                                        </Col>\r\n\r\n                                        <Col md={3} key='status' onChange={onChangeRadio}>\r\n\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='New'\r\n                                                value='new'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Packed'\r\n                                                value='packed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Shipped'\r\n                                                value='shipped'\r\n                                            />\r\n                                        </Col>\r\n                                        <Col md={2} key='status' onChange={onChangeRadio}>\r\n\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Completed'\r\n                                                value='completed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Delayed'\r\n                                                value='delayed'\r\n                                            />\r\n                                            <Form.Check\r\n                                                type='radio'\r\n                                                id='status'\r\n                                                name=\"group1\"\r\n                                                label='Cancelled'\r\n                                                value='cancelled'\r\n                                            />\r\n                                        </Col>\r\n                                        <Col sm={12} md={12} style={{width:'100%',textAlign:'center'}}>\r\n                                            <div style={{marginTop:'50px'}}>\r\n                                            <Button style={{ width: \"90px\", marginTop: '50px', margin:'10px' }} onClick={cancel} variant=\"primary\">CANCEL</Button>\r\n                                            <Button style={{ width: \"90px\", marginTop: '50px', margin:'10px'  }} onClick={Update} variant=\"primary\">UPDATE</Button>\r\n\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.orderReducer.message\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateorderbyid: (id, orderdata) => dispatch(orderactions.updateorders(id, orderdata)),\r\n        onGetorders: (filter) => dispatch(orderactions.fetchorders(filter))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ordermodel);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [variant,setVariant]= React.useState(props.variant);\r\n  const [msg,setMsg]= React.useState(props.msg);\r\n  const [state, setState] = React.useState({\r\n    vertical: 'top',\r\n    horizontal: 'center',\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical, horizontal }}>\r\n        <Alert onClose={handleClose} severity={variant}>\r\n            {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert> */}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}