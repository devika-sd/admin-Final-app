{"version":3,"sources":["components/Updateuser.js","services/auth-header.js","action/user-action.js","components/Userlist.js","action/auth-actions.js","components/Login.js","components/Adduser.js","components/UserProfile.js","components/navbar/SidebarData.js","components/navbar/SubMenu.js","components/navbar/Sidebar.js","action/order-action.js","components/Ordermodel.js","components/Orderlist.js","App.js","reportWebVitals.js","store/user-reducer.js","store/auth-reducer.js","store/order-reducer.js","index.js"],"names":["Updateuser","state","id","this","setState","props","match","params","console","log","Component","authHeader","token","localStorage","getItem","FETCH_USERS","UPDATE_USER","LOGIN_USER","ADD_USER","ERROR_USER","FILTER_USER","fetchusers","filter","dispatch","fetch","headers","then","res","json","data","total","type","payload","addusers","user","method","body","JSON","stringify","users","success","saveUser","Userlist","word","active","maxpage","limit","pageno","open","getUsers","onfilterUsers","value","a","onGetUsers","current","max","temparrr","temp","Math","floor","temparr","i","length","tempactive","email","onDelete","status","onBlock","history","push","e","target","items","map","Pagination","Item","onClick","changepage","userList","name","phone","to","_id","className","onDeleteUser","onBlockUser","isBlocked","href","Form","inline","FormControl","placeholder","onChange","filterdata","bind","Button","variant","Table","striped","bordered","hover","style","display","width","margin","First","updatepagination","Prev","Next","Last","connect","userReducer","totaluser","response","useractions","page","USER_LOGIN","userLogin","setItem","removeItem","Login","password","emailError","passwordError","emailvalid","passwordvalid","event","RegExp","test","onAuthLogin","onUserLogin","alert","message","check","data-wow-delay","emailCheck","required","data-validation-required-message","passwordCheck","login","disabled","currentUser","authenticated","authReducer","authactions","Adduser","phonenumber","housenumber","locality","city","country","pincode","nameError","phonenumberError","namevalid","phonenumbervalid","role","roleError","rolevalid","housenumbervalid","localityvalid","cityvalid","countryvalid","pincodevalid","state1","select","selectvalid","isAdmin","addresses","houseNumber","pinCode","onAddUser","Group","Control","size","phonenumberCheck","as","roleCheck","custom","Label","Row","Col","controlId","housenumberCheck","localityCheck","stateCheck","title","citycheck","countryCheck","pincodeCheck","validateUser","actions","onUpdate","roledata","roleData","useParams","useState","address","setAddress","setName","setEmail","setPassword","cpassword","setCPassword","setOldPassword","setContact","enable","setEnable","passwordEnable","setPasswordEnable","setNameError","setEmailError","setPasswordError","cpasswordError","setCPasswordError","contactError","setContactError","useEffect","onNameChange","nameValue","onEmailChange","emailValue","onContactChange","contactValue","Update","localeCompare","Edit","addresslist","newAdd","padding","textTransform","fontSize","column","sm","Text","Card","boxSizing","border","fontFamily","Body","Title","textAlign","marginBottom","readOnly","plaintext","borderRadius","outline","block","SidebarData","path","icon","cName","iconClosed","iconOpened","subNav","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","SubMenu","item","subnav","setSubnav","index","Nav","div","NavIcon","SidebarNav","nav","sidebar","SidebarWrap","setSidebar","showSidebar","Provider","color","height","float","marginRight","FETCH_ORDERS","UPDATE_ORDERS","ERROR_ORDERS","URL","fetchorders","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","backgroundColor","boxShadow","shadows","spacing","updateorderbyid","orderdata","orderdetails","onGetorders","orderactions","order","classes","modalStyle","setOpen","orderid","paytype","paymentStatus","paymentType","orderDate","dateTime","amount","setStatus","booklist","books","book","quantity","isbn","slice","Modal","aria-labelledby","aria-describedby","Check","label","orders","orderReducer","totalorders","setPageno","setActive","pageNo","getOrders","handleSelect","orderList1","no","changePage","DropdownButton","alignRight","onSelect","Dropdown","eventKey","App","component","Sidebar","UserProfile","Orderlist","Ordermodel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","userid","myEnhancer","applyMiddleware","storeAPI","next","result","getState","thunkMiddleware","appStore","createStore","combineReducers","window","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2ddb72e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Updateuser extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={id:''};\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.setState({id:this.props.match.params.id});\r\n        console.log(this.props.match.params.id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>the user id for updation is {this.state.id}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Updateuser;","function authHeader() {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n        return {'Authorization': 'Bearer ' + token , 'content-type': 'application/json'}\r\n    }\r\n    else{\r\n        return {'content-type': 'application/json'}\r\n    }\r\n}\r\nexport default authHeader;\r\n","import authHeader from '../services/auth-header'\r\n\r\nexport const FETCH_USERS = \"FETCH_USERS\"\r\nexport const UPDATE_USER = \"UPDATE_USER\"\r\nexport const LOGIN_USER = \"LOGIN_USER\"\r\nexport const ADD_USER = \"ADD_USER\"\r\nexport const ERROR_USER = \"ERROR_USER\"\r\nexport const FILTER_USER = \"FILTER_USER\"\r\n\r\nexport const filteruserbyname = (name,page,limit) => {\r\n    //add your code\r\n    console.log(\"***************\"+name,page,limit);\r\n    var filter = 'email[regex]='+name+'&page='+page+'&limit='+limit;\r\n    console.log(\"*************\"+filter+\"************\")\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/?sort=name&'+filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //this.setState({ users: data.data })\r\n                console.log(data)\r\n                dispatch({ type: FILTER_USER, payload: data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchusers = (filter) => {\r\n    //add your code\r\n    console.log(\"***************\"+filter);\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users?sort=name&' + filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //this.setState({ users: data.data })\r\n                console.log(data.total)\r\n                dispatch({ type: FETCH_USERS, payload: data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateusers = (_id,roleData) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/'+_id,\r\n            {\r\n                method: 'PUT',\r\n                headers: authHeader(),\r\n                body: JSON.stringify(roleData)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                console.log(\"*************\"+data.success);\r\n                if (data.success === true) {\r\n                    // this.setState({ message: \"Successfully inserted\" })\r\n                    dispatch({ type: UPDATE_USER, payload: data.data });\r\n                }\r\n                else{\r\n                    console.log(\"*************\"+data.success);\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: data.message\r\n                    });\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteusers = (email, filter) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/' + email, {\r\n            method: 'DELETE',\r\n            // headers: { 'Content-Type': 'application/json' }\r\n            headers: authHeader()\r\n            //body: JSON.stringify(inputs)\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                dispatch(fetchusers(filter));\r\n            });\r\n    }\r\n}\r\n\r\nexport const blockusers = (email, status, filter) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/block/' + email + '&' + !status, {\r\n            method: 'PATCH',\r\n            // headers: { 'Content-Type': 'application/json' }\r\n            //body: JSON.stringify(inputs)\r\n            headers: authHeader()\r\n        })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                // dispatch({type: BLOCK_USER,payload:data.user});\r\n                dispatch(fetchusers(filter));\r\n            });\r\n    }\r\n}\r\n\r\nexport const loginusers = (user) => {\r\n    //add your code\r\n    return dispatch => {\r\n\r\n        return fetch('http://localhost:8080/api/v1/users/login', {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(user)\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    // localStorage.setItem('token', data.token);\r\n                    console.log(\"token\"+data.token)\r\n                    localStorage.setItem('token', data.token);\r\n                    dispatch({\r\n                        type: LOGIN_USER,\r\n                        payload: data\r\n                    });\r\n                    // show an alert message or transition into dashboard component ERROR_USER\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: data\r\n                    });\r\n                }\r\n            })\r\n        }\r\n}\r\nconst saveUser = (users) => {\r\n    return {\r\n        type: ADD_USER,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const addusers = (user) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch('http://localhost:8080/api/v1/users/', {\r\n            method: 'POST',\r\n            headers: authHeader(),\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(res => res.json())\r\n            .then(users => {\r\n                console.log(users)\r\n                if(users.success)\r\n                {\r\n                    dispatch(fetchusers(\"\"));\r\n                    dispatch(saveUser(users));\r\n                }\r\n                else\r\n                {\r\n                    dispatch({\r\n                        type: ERROR_USER,\r\n                        payload: users\r\n                    });\r\n                }\r\n                \r\n            })\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table,Form,FormControl,Button } from 'react-bootstrap'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport * as useractions from '../action/user-action';\r\nclass Userlist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { users: [],word:'', active: 1, maxpage: 1, limit: 5, pageno: [1, 2, 3], open: false }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.word===''? this.getUsers(): this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n    }\r\n\r\n    async changepage(value) {\r\n        await this.setState({ active: value });\r\n        this.state.word===''?await this.getUsers():await this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n    }\r\n    async getUsers() {\r\n        await this.props.onGetUsers(\"page=\" + this.state.active + \"&limit=\" + this.state.limit);\r\n    }\r\n    async updatepagination(current) {\r\n        var max = 1;\r\n        max = this.props.total / this.state.limit;\r\n        console.log(max);\r\n        this.setState({ maxpage: max });\r\n        if (current === 'initial') {\r\n            let temparrr = [1, 2, 3];\r\n            await this.setState({ pageno: temparrr, active: 1 });\r\n            this.state.word===''?await this.getUsers():await this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n        }\r\n        if (current === 'final') {\r\n            let temp = max > Math.floor(this.props.total / this.state.limit) ? Math.floor(max) + 1 : Math.floor(max);\r\n            let temparrr = [temp - 2, temp - 1, temp];\r\n            await this.setState({ pageno: temparrr, active: temp });\r\n            this.state.word===''?await this.getUsers():await this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n        }\r\n        if (this.state.pageno[2] < max) {\r\n            if (current === \"next\") {\r\n                var temparr = [...this.state.pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] + 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                await this.setState({ pageno: temparr, active: tempactive });\r\n                this.state.word===''?await this.getUsers():await this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n            }\r\n        }\r\n        if (current === \"prev\") {\r\n            if (this.state.pageno[0] !== 1) {\r\n                var temparr = [...this.state.pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] - 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                await this.setState({ pageno: temparr, active: tempactive });\r\n                this.state.word===''?await this.getUsers():await this.props.onfilterUsers(this.state.word,this.state.active,this.state.limit);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDeleteUser(email) {\r\n        this.props.onDelete(email, \"page=\" + this.state.active + \"&limit=\" + this.state.limit);\r\n    }\r\n\r\n    onBlockUser(email, status) {\r\n        this.props.onBlock(email, status, \"page=\" + this.state.active + \"&limit=\" + this.state.limit);\r\n    }\r\n    onUpdateUser(id) {\r\n        this.props.history.push(\"/updateuser/\" + id);\r\n    }\r\n    async filterdata(e)\r\n    {\r\n        if(e.target.value.length>=3)\r\n        {\r\n            this.setState({word:e.target.value,active:1})\r\n            console.log(e.target.value);\r\n            this.props.onfilterUsers(e.target.value,this.state.active,this.state.limit);\r\n\r\n        }\r\n        else\r\n        {\r\n            await this.getUsers()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.word)\r\n        let items = this.state.pageno.map((value) => {\r\n            return (<Pagination.Item key={value} onClick={() => { this.changepage(value) }} active={value === this.state.active}>\r\n                {value}\r\n            </Pagination.Item>)\r\n\r\n        })\r\n\r\n        let userList = this.props.users.map((user, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phone}</td>\r\n                    <td><Link to={\"/userprofile/\" + user._id}><button className=\"btn btn-primary\" >Update</button></Link> </td>\r\n                    <td><button className=\"btn btn-primary\" onClick={() => { this.onDeleteUser(user.email) }}> Delete </button></td>\r\n                    <td><button className=\"btn btn-primary\" onClick={() => { this.onBlockUser(user.email, user.isBlocked) }}>{user.isBlocked ? \"Unblock\" : \"Block\"}  </button></td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <div className=\"container-fluid\">\r\n                        <a className=\"navbar-brand\" href=\"#\">Userlist</a>\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" onChange={this.filterdata.bind(this)} className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </div>\r\n                </nav>\r\n\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>UserName</th>\r\n                            <th>Email Id</th>\r\n                            <th>Contact Number</th>\r\n                            <th>update</th>\r\n                            <th>delete</th>\r\n                            <th>Block/Unblock</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userList}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                    <Pagination style={{ display: 'flex', width: '220px', margin: 'auto' }}>\r\n                        <Pagination.First onClick={() => { this.updatepagination(\"initial\") }} />\r\n                        <Pagination.Prev onClick={() => { this.updatepagination(\"prev\") }} />\r\n                        {items}\r\n                        <Pagination.Next onClick={() => { this.updatepagination(\"next\") }} />\r\n                        <Pagination.Last onClick={() => { this.updatepagination(\"final\") }} />\r\n                    </Pagination>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.userReducer.users,\r\n        total: state.userReducer.totaluser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onBlock: (email, status, filter) => dispatch(useractions.blockusers(email, status, filter)),\r\n        onDelete: (email, filter) => dispatch(useractions.deleteusers(email, filter)),\r\n        onGetUsers: (filter) => dispatch(useractions.fetchusers(filter)),\r\n        onfilterUsers: (word,page,limit) => dispatch(useractions.filteruserbyname(word,page,limit))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Userlist);","export const USER_LOGIN = \"USER_LOGIN\"\r\n\r\n\r\n\r\nexport const login = (success) => {\r\n    console.log('In auth action: ', success)\r\n    if(!success){\r\n        console.log('Removing token ****************** ')\r\n        localStorage.removeItem('token');\r\n    }\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: success\r\n    }\r\n}\r\n\r\nexport const userLogin = (user) => {\r\n\r\n    // hardcoded\r\n    // let workouts =  [\r\n    //     {\"title\": \"Run for 5 mins (from actions)\", \"desc\": \"test desc\", cbpm: 343}\r\n    // ]\r\n\r\n    // delayed dispatch available\r\n\r\n    console.log('In fech workout action *******************************')\r\n    return dispatch => {\r\n\r\n        return fetch('http://localhost:8080/api/v1/users/login', {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if(data.success){\r\n                console.log('In auth servicee ......')\r\n                localStorage.setItem('token', data.token);\r\n                dispatch(login(data.success));\r\n                // show an alert message or transition into dashboard component\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    // fetch it from server side\r\n\r\n    // return {\r\n    //     type: FETCH_WORKOUTS,\r\n    //     payload: workouts\r\n    // }\r\n}","import React, { Component } from 'react';\r\nimport authHeader from '../services/auth-header';\r\nimport {connect} from 'react-redux';\r\nimport * as useractions from '../action/user-action';\r\nimport * as authactions from '../action/auth-actions';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { email: '', password: '', emailError: '', passwordError: '', emailvalid: 0, passwordvalid: 0 };\r\n    }\r\n \r\n    emailCheck(event) {\r\n        let value = event.target.value;\r\n        console.log(value);\r\n        var mail = new RegExp(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",);\r\n        if (!mail.test(value)) {\r\n            this.setState({ emailError: \"please enter valid mail\", emailvalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ emailError: '', emailvalid: 1 })\r\n        }\r\n        this.setState({ email: value })\r\n    }\r\n    passwordCheck(event) {\r\n        let value = event.target.value;\r\n        if (value.length < 6) {\r\n            this.setState({ passwordError: \"password must be greater than 6 characters\", passwordvalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ passwordError: '', passwordvalid: 1 })\r\n        }\r\n        this.setState({ password: value })\r\n    }\r\n    async login() {\r\n        // fetch('http://localhost:8080/api/v1/users/login', {\r\n        //     method: 'POST',\r\n        //     headers: authHeader(),\r\n        //     body: JSON.stringify({email:this.state.email,password:this.state.password}),\r\n        //     })\r\n        //     .then(response => response.json())\r\n        //     .then(data=>{\r\n        //         console.log(data);   \r\n        //         //this.props.onUserLogin(data);   \r\n                        \r\n        //     if (data.status === true)\r\n        //         {\r\n        //             localStorage.setItem('token', data.token);\r\n        //             this.props.history.push('/dashboard');\r\n        //         }\r\n        //         else\r\n        //         {\r\n        //             alert(data.message);\r\n        //         }\r\n        //     })\r\n            await this.props.onAuthLogin({email:this.state.email,password:this.state.password});  \r\n            await this.props.onUserLogin({email:this.state.email,password:this.state.password});\r\n            alert(this.props.message);\r\n    }\r\n    \r\n    render() {\r\n        var check = true;\r\n        if ((this.state.emailvalid === 1) && (this.state.passwordvalid === 1)) {\r\n            check = false;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"userform\">\r\n                    <div className=\"container\">\r\n                        <div className=\"section-header text-center wow zoomIn\" data-wow-delay=\"0.1s\">\r\n                            <p>Login Form</p>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 wow fadeInUp\" data-wow-delay=\"0.1s\">\r\n                                <div className=\"userform-form\">\r\n                                    <form>\r\n                                        <div className=\"control-group\">\r\n                                            <input type=\"email\" className=\"form-control\" onChange={this.emailCheck.bind(this)} id=\"email\" placeholder=\"Email\" required=\"required\" data-validation-required-message=\"Please enter your name\" />\r\n                                            <p className=\"help-block text-danger\">{this.state.emailError}</p>\r\n                                        </div>\r\n                                        <div className=\"control-group\">\r\n                                            <input type=\"password\" className=\"form-control\" onChange={this.passwordCheck.bind(this)} id=\"password\" placeholder=\"Password\" required=\"required\" data-validation-required-message=\"Please enter your email\" />\r\n                                            <p className=\"help-block text-danger\" >{this.state.passwordError}</p>\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            <button className=\"btn btn-primary\" type=\"button\" onClick={this.login.bind(this)} disabled={check}>Login</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps  =(state)=>{\r\n    return { \r\n            userReducer:state.userReducer.currentUser,\r\n            message:state.userReducer.message,\r\n            authenticated:state.authReducer.authenticated\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUserLogin: (user)=>dispatch(useractions.loginusers(user)),\r\n        onAuthLogin: (user)=>dispatch(authactions.userLogin(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../action/user-action';\r\n\r\nclass Adduser extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '', email: '', password: '', phonenumber: '', housenumber:'', locality:'', city:'', country:'',  pincode:'', nameError: '', emailError: '', passwordError: '',\r\n            phonenumberError: '', namevalid: 0, emailvalid: 0, passwordvalid: 0, phonenumbervalid: 0,\r\n            role: '', roleError: '', rolevalid: 0, housenumbervalid : 0, localityvalid : 0, cityvalid :0, countryvalid : 0, pincodevalid : 0,\r\n            state1 :[\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",\r\n            \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\",\r\n            \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\",\r\n            \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\",\r\n            \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"], select:'', selectvalid : 0\r\n        };\r\n    }\r\n\r\n    name(event) {\r\n        let value = event.target.value\r\n        const name = new RegExp('[a-zA-Z\\s]{5,20}')\r\n        if (!name.test(value)) {\r\n            this.setState({ nameError: \"please enter a valid firstname\", namevalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ nameError: '', namevalid: 1 })\r\n        }\r\n        this.setState({ name: value })\r\n    }\r\n\r\n    // lastname(event) {\r\n    //     let value = event.target.value\r\n    //     const lastname = new RegExp('[a-zA-Z\\s]{5,15}')\r\n    //     if (!lastname.test(value)) {\r\n    //         this.setState({ lastnameError: \"please enter a valid lastname\", lastnamevalid: 0 })\r\n    //     }\r\n    //     else {\r\n    //         this.setState({ lastnameError: '', lastnamevalid: 1 })\r\n    //     }\r\n    //     this.setState({ lastname: value })\r\n    // }\r\n\r\n    // username(event) {\r\n    //     let value = event.target.value\r\n    //     const username = new RegExp('[a-zA-Z\\s]{5,30}')\r\n    //     if (!username.test(value)) {\r\n    //         this.setState({ usernameError: \"please enter a valid username\", usernamevalid: 0 })\r\n    //     }\r\n    //     else {\r\n    //         this.setState({ usernameError: '', usernamevalid: 1 })\r\n    //     }\r\n    //     this.setState({ username: value })\r\n    // }\r\n\r\n\r\n    emailCheck(event) {\r\n        let value = event.target.value;\r\n        var mail = new RegExp(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\",);\r\n        if (!mail.test(value)) {\r\n            this.setState({ emailError: \"please enter a valid mail\", emailvalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ emailError: '', emailvalid: 1 })\r\n        }\r\n        this.setState({ email: value })\r\n    }\r\n\r\n    passwordCheck(event) {\r\n        let value = event.target.value;\r\n        if (value.length < 6) {\r\n            this.setState({ passwordError: \"password must be greater than 6 characters\", passwordvalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ passwordError: '', passwordvalid: 1 })\r\n        }\r\n        this.setState({ password: value })\r\n    }\r\n\r\n    phonenumberCheck(event) {\r\n        let value = event.target.value;\r\n        const phonenumber = new RegExp(\"^[0-9]{10}$\");\r\n        if (!phonenumber.test(value)) {\r\n            this.setState({ phonenumberError: \"please enter a valid contact number\", phonenumbervalid: 0 })\r\n        }\r\n        else {\r\n            this.setState({ phonenumberError: '', phonenumbervalid: 1 })\r\n        }\r\n        this.setState({ phonenumber: value })\r\n\r\n    }\r\n\r\n\r\n    roleCheck(event) {\r\n        let value = event.target.value\r\n        if (value === 0) {\r\n            this.setState({ roleError: ' Please Select Role', rolevalid: 0 })\r\n        }\r\n\r\n        else {\r\n            this.setState({ role: value, rolevalid: 1 })\r\n        }\r\n    }\r\n\r\n    housenumberCheck(event){\r\n        let value = event.target.value\r\n        const housenumber = new RegExp(\"^[0-9]{1,4}$\");\r\n        if(housenumber.test(value)){\r\n            this.setState({ housenumber: value, housenumbervalid: 1 })\r\n        }\r\n    }\r\n\r\n    localityCheck(event){\r\n        let value = event.target.value\r\n        const locality = new RegExp('[a-zA-Z\\s]{5,30}')\r\n        if(locality.test(value)){\r\n            this.setState({ locality: value, localityvalid: 1 })\r\n        }\r\n    }\r\n    \r\n    citycheck(event){\r\n        let value = event.target.value\r\n        const city = new RegExp('[a-zA-Z\\s]{5,30}')\r\n        if(city.test(value)){\r\n            this.setState({ city: value, cityvalid: 1 })\r\n        }\r\n    }\r\n\r\n    countryCheck(event) {\r\n        let value = event.target.value\r\n        if (value === 0) {\r\n            this.setState({ country: value, countryvalid: 0 })\r\n        }\r\n\r\n        else {\r\n            this.setState({ country: value, countryvalid: 1 })\r\n        }\r\n    }\r\n    \r\n    stateCheck(event){\r\n        let value = event.target.value\r\n        this.setState({ select: value, selectvalid :1 });\r\n    }\r\n\r\n    pincodeCheck(event){\r\n        let value = event.target.value\r\n        const pincode = new RegExp(\"^[0-9]{6}$\");\r\n        if (pincode.test(value)) {\r\n            this.setState({ pincode: value, pincodevalid :1 })\r\n        }\r\n    }\r\n\r\n    async validateUser() {\r\n        // fetch('http://localhost:8080/api/v1/users/', {\r\n        //     method: 'POST', \r\n        //     headers:authHeader(),\r\n        //     body: JSON.stringify({name:this.state.name,email:this.state.email,password:this.state.password,phonenumber:this.state.phonenumber,address:this.state.address,role:'user'}),\r\n        //     })\r\n        //     .then(response => response.json())\r\n        //     .then(data=>{\r\n        //         console.log(data);\r\n        //         if (data.status === true)\r\n        //         {\r\n        //             alert(data.message)\r\n        //         }\r\n        //         else\r\n        //         {\r\n        //             alert(data.message)\r\n        //         }\r\n        //     })\r\n        let user = { name: this.state.name, email: this.state.email, password: this.state.password, phone: this.state.phonenumber,isAdmin: this.state.role,addresses:[{houseNumber:this.state.housenumber,city:this.state.city,locality:this.state.locality,country:this.state.country,state:this.state.select,pinCode:this.state.pincode}] };\r\n        console.log(user)\r\n        await this.props.onAddUser(user);\r\n        alert(this.props.message);\r\n    }\r\n\r\n\r\n    render() {\r\n        var check = true;\r\n        if ((this.state.emailvalid === 1) && (this.state.passwordvalid === 1) && (this.state.namevalid === 1) && (this.state.phonenumbervalid === 1) && (this.state.rolevalid === 1) && (this.state.housenumbervalid === 1) && (this.state.localityvalid === 1) && (this.state.cityvalid === 1) && (this.state.countryvalid === 1) && (this.state.selectvalid === 1) && (this.state.pincodevalid === 1)) {\r\n            check = false;\r\n        }\r\n        console.log({ name: this.state.name, email: this.state.email, password: this.state.password, phone: this.state.phonenumber,isAdmin: this.state.role,addresses:[{houseNumber:this.state.housenumber,city:this.state.city,locality:this.state.locality,country:this.state.country,state:this.state.select,pinCode:this.state.pincode}] });\r\n        return (\r\n            <div>\r\n                <div className=\"page-header\" style={{ width: '50%', margin: '30px auto' }}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title text-primary\">Add User</h4><br />\r\n                                    <form className=\"forms-sample\">\r\n                                        <Form.Group>\r\n                                            <Form.Control type=\"text\" className=\"form-control\" onChange={this.name.bind(this)} id=\"exampleInputUsername1\" placeholder=\"Name\" size=\"lg\" />\r\n                                            <p className=\"help-block text-danger\">{this.state.nameError}</p>\r\n                                        </Form.Group><br />\r\n\r\n                                        {/* <Form.Group>\r\n                                            <Form.Control type=\"text\" onChange={this.lastname.bind(this)} id=\"exampleInputUsername1\" placeholder=\"LastName\" size=\"lg\" />\r\n                                           <p className=\"help-block text-danger\">{this.state.lastnameError}</p>\r\n                                        </Form.Group><br /> */}\r\n\r\n                                        {/* <Form.Group>\r\n                                            <Form.Control type=\"text\" onChange={this.username.bind(this)} id=\"exampleInputUsername1\" placeholder=\"Username\" size=\"lg\" />\r\n                                           <p className=\"help-block text-danger\">{this.state.usernameError}</p>\r\n                                        </Form.Group><br /> */}\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control type=\"email\" className=\"form-control\" onChange={this.emailCheck.bind(this)} className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\" size=\"lg\" />\r\n                                            <p className=\"help-block text-danger\">{this.state.emailError}</p>\r\n                                        </Form.Group><br />\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control type=\"password\" className=\"form-control\" onChange={this.passwordCheck.bind(this)} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" size=\"lg\" />\r\n                                            <p className=\"help-block text-danger\">{this.state.passwordError}</p>\r\n                                        </Form.Group><br />\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control type=\"number\" className=\"form-control\" onChange={this.phonenumberCheck.bind(this)} id=\"exampleInputUsername1\" placeholder=\"Contact Number\" size=\"lg\" />\r\n                                            <p className=\"help-block text-danger\">{this.state.phonenumberError}</p>\r\n                                        </Form.Group><br />\r\n\r\n                                        <Form.Group>\r\n                                            <Form.Control as=\"select\" onChange={this.roleCheck.bind(this)} custom size=\"lg\">\r\n                                                <option value=\"0\">Select Role</option>\r\n                                                <option value ={true} >Admin</option>\r\n                                                <option value={false}>User</option>\r\n                                            </Form.Control>\r\n                                            <p className=\"help-block text-danger\">{this.state.roleError}</p>\r\n                                        </Form.Group><br />\r\n\r\n                                        <Form.Label>Address</Form.Label>\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} controlId=\"formGridHouseNumber\">\r\n                                                <Form.Control type=\"number\" className=\"form-control\" onChange={this.housenumberCheck.bind(this)} id=\"exampleInputUsername1\" placeholder=\"HouseNumber\" size=\"lg\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} controlId=\"formGridLocality\">\r\n                                                <Form.Control type=\"text\" className=\"form-control\" onChange={this.localityCheck.bind(this)} placeholder=\"Locality\" size=\"lg\" />  \r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                                                <Form.Control as=\"select\" onChange={this.stateCheck.bind(this)} custom size=\"lg\">\r\n                                                    <option>Select State</option>\r\n                                                    {this.state.state1.map(data =>(\r\n                                                        <option title={data}>{data}</option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </Form.Row><br />\r\n\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                                <Form.Control type=\"text\" className=\"form-control\" onChange={this.citycheck.bind(this)} id=\"exampleInputUsername1\" placeholder=\"City\" size=\"lg\" />\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} controlId=\"formGridCountry\">\r\n                                                <Form.Control as=\"select\" onChange={this.countryCheck.bind(this)} custom size=\"lg\">\r\n                                                    <option value=\"\">Select Country</option>\r\n                                                    <option value=\"India\">India</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                                <Form.Control type=\"number\" className=\"form-control\" onChange= {this.pincodeCheck.bind(this)} id=\"exampleInputUsername1\" placeholder=\"PinCode\" size=\"lg\" />\r\n                                            </Form.Group>\r\n                                        </Form.Row><br />\r\n                                        <Button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={this.validateUser.bind(this)} disabled={check} >Add</Button>\r\n\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.userReducer.message\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddUser: (user) => dispatch(actions.addusers(user))\r\n    }\r\n}\r\n\r\n// export default AddWorkout;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Adduser);","import React, { useEffect, useState } from 'react'\r\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport authHeader from '../services/auth-header'\r\nimport {useParams} from \"react-router-dom\"\r\nimport {connect} from 'react-redux';\r\nimport * as useractions from '../action/user-action';\r\n\r\nfunction UserProfile(props) {\r\n    let { id } = useParams();\r\n    const [address, setAddress] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [cpassword, setCPassword] = useState('');\r\n    const [oldPassword, setOldPassword] = useState('');\r\n    const [phone, setContact] = useState('');\r\n\r\n    const [enable, setEnable] = useState(true)\r\n    const [passwordEnable, setPasswordEnable] = useState(false)\r\n\r\n    // const [addressError, setAddressError] = useState(true)\r\n    const [nameError, setNameError] = useState(true)\r\n    const [emailError, setEmailError] = useState(true)\r\n    const [passwordError, setPasswordError] = useState(true)\r\n    const [cpasswordError, setCPasswordError] = useState(true)\r\n    const [contactError, setContactError] = useState(true)\r\n    console.log(id+\"**********before************\")\r\n    useEffect(async() => {\r\n                await props.onGetUsers(\"_id=\"+id);\r\n                console.log(props.users[0])\r\n                setName(props.users[0].name)\r\n                setEmail(props.users[0].email)\r\n                setOldPassword(props.users[0].password)\r\n                setContact(props.users[0].phone)\r\n                var addresses=props.users[0].city+\",\"+props.users[0].pinCode;\r\n                setAddress(addresses)\r\n                // setRole(data.data[0].role)\r\n                if (props.users[0].isAdmin) setPasswordEnable(true)\r\n                else setPasswordEnable(false)\r\n\r\n                console.log(passwordEnable);\r\n    }, [props.users[0].email,id])\r\n    const onNameChange = (event) => {\r\n        var nameValue = (event.target.value)\r\n        const expression = new RegExp('^[a-zA-Z]{1}[a-zA-Z0-9\\\\s]{3,30}$');\r\n        // console.log(nameValue);\r\n        if (!(expression.test(nameValue))) {\r\n            setName(nameValue)\r\n            setNameError(false)\r\n        }\r\n        else {\r\n            setName(nameValue)\r\n            setNameError(true)\r\n        }\r\n    }\r\n    const onEmailChange = (event) => {\r\n        var emailValue = (event.target.value);\r\n        const expression = new RegExp('^\\\\w+([\\\\.-]?\\\\w+)@\\\\w+([\\\\.-]?\\\\w+)(\\\\.\\\\w{2,3})+$');\r\n        // console.log(nameValue);\r\n        if (!(expression.test(emailValue))) {\r\n            setEmail(emailValue)\r\n            setEmailError(false)\r\n        }\r\n        else {\r\n            setEmail(emailValue)\r\n            setEmailError(true)\r\n        }\r\n    }\r\n    const onPasswordChange = (event) => {\r\n        var contactValue = (event.target.value);\r\n        const expression = new RegExp('^(?=.[0-9])(?=.[!@#$%^&])[a-zA-Z0-9!@#$%^&]{6,16}$');\r\n        // console.log(nameValue);\r\n        if (!(expression.test(contactValue))) {\r\n            setPassword(contactValue)\r\n            setPasswordError(false)\r\n        }\r\n        else {\r\n            setPassword(contactValue)\r\n            setPasswordError(true)\r\n        }\r\n    }\r\n\r\n    const onCPasswordChange = (event) => {\r\n        var contactValue = (event.target.value);\r\n        const expression = new RegExp('^(?=.[0-9])(?=.[!@#$%^&])[a-zA-Z0-9!@#$%^&]{6,16}$');\r\n        // console.log(nameValue);\r\n        if (!(expression.test(contactValue))) {\r\n            setCPassword(contactValue)\r\n            setCPasswordError(false)\r\n        }\r\n        else {\r\n            setCPassword(contactValue)\r\n            setCPasswordError(true)\r\n        }\r\n    }\r\n\r\n    const onContactChange = (event) => {\r\n        var contactValue = (event.target.value);\r\n        const expression = new RegExp('^[0-9]{10}$');\r\n        // console.log(nameValue);\r\n        if (!(expression.test(contactValue))) {\r\n            setContact(contactValue)\r\n            setContactError(false)\r\n        }\r\n        else {\r\n            setContact(contactValue)\r\n            setContactError(true)\r\n        }\r\n    }\r\n\r\n    const Update = async (event) => {\r\n        if (password.localeCompare(cpassword) === 0) {\r\n\r\n            let roleData = { name, email, password, address, phone }\r\n            console.log(roleData);\r\n            props.onUpdate(id,roleData)\r\n            setEnable(true)\r\n\r\n        }\r\n        else {\r\n            setCPasswordError(false)\r\n        }\r\n        // FetchCalls.registerUser(roleData)\r\n        // event.preventDefault()\r\n    }\r\n\r\n    const Edit = (event) => {\r\n        console.log('Edit')\r\n        setEnable(false)\r\n        // FetchCalls.registerUser(roleData)\r\n        // event.preventDefault()\r\n    }\r\n    if(props.users.length !== 0)\r\n    {\r\n    var addresslist = props.users[0].addresses.map((address,i)=>{\r\n        var newAdd=address.houseNumber+\" ,\"+address.locality+\" ,\"+address.city+\" ,\"+address.state+\" ,\"+address.country+\" ,\"+address.pinCode;\r\n        return <Form.Group as={Row} className=\"mb-3\" >\r\n        <Form.Label style={{\r\n            // border: '1px solid lightgrey',\r\n            padding: '10px 15px',\r\n            textTransform: 'capitalize',\r\n            fontSize: '18px'\r\n            // borderRadius: '5px',\r\n            // outline: 'none'\r\n\r\n        }} column sm={3}>Address {i?i:null}</Form.Label>\r\n        <Col sm={9}>\r\n            <Form.Control type=\"text\" value={newAdd} onChange={onNameChange} placeholder=\"Enter Name\" />\r\n        </Col>\r\n        {!nameError && <Form.Text className=\"text-danger\">\r\n            Please Enter Valid Name (paddu)\r\n        </Form.Text>}\r\n    </Form.Group>\r\n    })\r\n    }\r\n    return (\r\n        <>\r\n                       <Card className=\"border border-muted\" style={{\r\n                padding: '10px 15px',\r\n                margin: '60px auto',\r\n                boxSizing: 'border-box',\r\n                border: 'none',\r\n                width: '50%',\r\n                fontFamily: 'monospace',\r\n                display: 'block'\r\n            }}>\r\n                <Card.Body>\r\n                    <Card.Title style={{\r\n                        textAlign: 'center',\r\n                        fontSize: '30px',\r\n                        marginBottom: '10%'\r\n                    }}>User Profile</Card.Title>\r\n                    <Card.Text>\r\n\r\n                        {/* Disabled */}\r\n                        {enable &&\r\n                            <Form>\r\n                                <Form.Group as={Row} className=\"mb-3\" >\r\n                                    <Form.Label style={{\r\n                                        // border: '1px solid lightgrey',\r\n                                        padding: '10px 15px',\r\n                                        textTransform: 'capitalize',\r\n                                        fontSize: '18px'\r\n                                        // borderRadius: '5px',\r\n                                        // outline: 'none'\r\n\r\n                                    }} column sm={3}>Name</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control readOnly plaintext style={{\r\n                                            border: '1px solid lightgrey',\r\n                                            padding: '10px 15px',\r\n                                            textTransform: 'capitalize',\r\n                                            borderRadius: '5px',\r\n                                            outline: 'none'\r\n                                        }} type=\"text\" value={name} onChange={onNameChange} placeholder=\"Enter Name\" />\r\n                                    </Col>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} className=\"mb-3\" >\r\n                                    <Form.Label style={{\r\n                                        // border: '1px solid lightgrey',\r\n                                        padding: '10px 15px',\r\n                                        textTransform: 'capitalize',\r\n                                        fontSize: '18px'\r\n                                        // borderRadius: '5px',\r\n                                        // outline: 'none'\r\n\r\n                                    }} column sm={3}>Email</Form.Label>\r\n                                    <Col sm={9}>\r\n\r\n                                        <Form.Control readOnly plaintext style={{\r\n                                            border: '1px solid lightgrey',\r\n                                            padding: '10px 15px',\r\n                                            borderRadius: '5px',\r\n                                            outline: 'none'\r\n                                        }} type=\"email\" value={email} onChange={onEmailChange} placeholder=\"Enter Email\" />\r\n                                    </Col>\r\n\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Row} className=\"mb-3\" >\r\n                                    <Form.Label style={{\r\n                                        // border: '1px solid lightgrey',\r\n                                        padding: '10px 15px',\r\n                                        textTransform: 'capitalize',\r\n                                        fontSize: '18px'\r\n                                        // borderRadius: '5px',\r\n                                        // outline: 'none'\r\n\r\n                                    }} column sm={3}>Contact No.</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control readOnly plaintext style={{\r\n                                            border: '1px solid lightgrey',\r\n                                            padding: '10px 15px',\r\n                                            borderRadius: '5px',\r\n                                            outline: 'none'\r\n                                        }} type=\"text\" value={phone} onChange={onContactChange} placeholder=\"Enter Contact Number\" />\r\n                                    </Col>\r\n\r\n                                </Form.Group>\r\n                                {addresslist}\r\n\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm={6}>\r\n                                        <Button variant=\"primary\" block onClick={Edit}>EDIT</Button>\r\n                                    </Col>\r\n                                    <Col sm={6}>\r\n                                        <Button disabled variant=\"primary\" block onClick={Update}>UPDATE</Button>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        }\r\n\r\n                        {/* Enabled */}\r\n                        {!enable && <Form>\r\n                            <Form.Group as={Row} className=\"mb-3\" >\r\n                                <Form.Label style={{\r\n                                    // border: '1px solid lightgrey',\r\n                                    padding: '10px 15px',\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '18px'\r\n                                    // borderRadius: '5px',\r\n                                    // outline: 'none'\r\n\r\n                                }} column sm={3}>Name</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control type=\"text\" value={name} onChange={onNameChange} placeholder=\"Enter Name\" />\r\n                                </Col>\r\n                                {!nameError && <Form.Text className=\"text-danger\">\r\n                                    Please Enter Valid Name (paddu)\r\n                                </Form.Text>}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} className=\"mb-3\" >\r\n                                <Form.Label style={{\r\n                                    // border: '1px solid lightgrey',\r\n                                    padding: '10px 15px',\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '18px'\r\n                                    // borderRadius: '5px',\r\n                                    // outline: 'none'\r\n\r\n                                }} column sm={3}>Email</Form.Label>\r\n                                <Col sm={9}>\r\n\r\n                                    <Form.Control type=\"email\" value={email} onChange={onEmailChange} placeholder=\"Enter Email\" />\r\n                                </Col>\r\n                                {!emailError && <Form.Text className=\"text-danger\">\r\n                                    Please Enter Valid Email (paddu@gmail.com)\r\n                                </Form.Text>}\r\n                            </Form.Group>\r\n                            {passwordEnable &&\r\n                                <Form.Group as={Row} className=\"mb-3\" >\r\n                                    <Form.Label style={{\r\n                                        // border: '1px solid lightgrey',\r\n                                        padding: '10px 15px',\r\n                                        textTransform: 'capitalize',\r\n                                        fontSize: '18px'\r\n                                        // borderRadius: '5px',\r\n                                        // outline: 'none'\r\n\r\n                                    }} column sm={3}>Password</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control type=\"text\" value={password} onChange={onPasswordChange} placeholder=\"New Password\" />\r\n                                    </Col>\r\n                                    {!passwordError && <Form.Text className=\"text-danger\">\r\n                                        Please Enter Valid Password (paddu@0y)\r\n                                    </Form.Text>}\r\n                                </Form.Group>\r\n\r\n                            }\r\n                            {passwordEnable &&\r\n                                <Form.Group as={Row} className=\"mb-3\" >\r\n                                    <Form.Label style={{\r\n                                        // border: '1px solid lightgrey',\r\n                                        padding: '10px 15px',\r\n                                        textTransform: 'capitalize',\r\n                                        fontSize: '18px'\r\n                                        // borderRadius: '5px',\r\n                                        // outline: 'none'\r\n\r\n                                    }} column sm={3}>Confirm Password</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control type=\"text\" value={cpassword} onChange={onCPasswordChange} placeholder=\"Confirm Password\" />\r\n                                    </Col>\r\n                                    {!cpasswordError && <Form.Text className=\"text-danger\">\r\n                                        Please Enter Valid Password (paddu@0y)\r\n                                    </Form.Text>}\r\n                                </Form.Group>\r\n\r\n                            }\r\n\r\n                            <Form.Group as={Row} className=\"mb-3\" >\r\n                                <Form.Label style={{\r\n                                    // border: '1px solid lightgrey',\r\n                                    padding: '10px 15px',\r\n                                    textTransform: 'capitalize',\r\n                                    fontSize: '18px'\r\n                                    // borderRadius: '5px',\r\n                                    // outline: 'none'\r\n\r\n                                }} column sm={3}>Contact No.</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control type=\"text\" value={phone} onChange={onContactChange} placeholder=\"Enter Contact Number\" />\r\n                                </Col>\r\n                                {!contactError && <Form.Text className=\"text-danger\">\r\n                                    Please Enter Valid Contact number (9284556633)\r\n                                </Form.Text>}\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Col sm={6}>\r\n                                    <Button disabled variant=\"primary\" block onClick={Edit}>EDIT</Button>\r\n                                </Col>\r\n                                <Col sm={6}>\r\n                                    <Button variant=\"primary\" block onClick={Update}>UPDATE</Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n                        }\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps  =(state)=>{\r\n    return { \r\n        users:state.userReducer.users,\r\n        authenticated:state.authReducer.authenticated\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onUpdate: (id,roledata)=>dispatch(useractions.updateusers(id,roledata)),\r\n        onGetUsers: (id)=>dispatch(useractions.fetchusers(id))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( UserProfile);","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n//import { IconName } from \"react-icons/bs\";\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as RiIcons from 'react-icons/ri';\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Dashboard',\r\n    path: '/Dashboard',\r\n    icon: <AiIcons.AiFillDashboard />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profile',\r\n    path: '/userprofile/',\r\n    icon: <AiIcons.AiFillContacts />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Orders',\r\n    icon: <FaIcons.FaCartPlus />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    subNav: [\r\n        {\r\n          title: 'Order List',\r\n          path: '/orderlist',\r\n          icon: <IoIcons.IoIosPaper />,\r\n          cName: 'sub-nav'\r\n        }\r\n      ] \r\n  },\r\n  {\r\n    title: 'Users',\r\n    icon: <IoIcons.IoMdPeople />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    subNav: [\r\n        {\r\n          title: 'User List',\r\n          path: '/userlist',\r\n          icon: <IoIcons.IoMdPeople />,\r\n          cName: 'sub-nav'\r\n        },\r\n        {\r\n          title: 'Add User',\r\n          path: '/adduser',\r\n          icon: <IoIcons.IoMdPeople />,\r\n          cName: 'sub-nav'\r\n        }\r\n      ] \r\n   },\r\n  {\r\n    title: 'Logout',\r\n    path: '/Logout',\r\n    icon: <AiIcons.AiOutlineLogout />,\r\n    cName: 'nav-text'\r\n  }\r\n];\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height:60px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n  background: #414757;\r\n  height: 50px;\r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SubMenu = ({ item }) => {\r\n  const [subnav, setSubnav] = useState(false);\r\n\r\n  const showSubnav = () => setSubnav(!subnav);\r\n\r\n  return (\r\n    <>\r\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n        <div>\r\n          {item.icon}\r\n          <SidebarLabel>{item.title}</SidebarLabel>\r\n        </div>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </SidebarLink>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          return (\r\n            <DropdownLink to={item.path} key={index}>\r\n              {item.icon}\r\n              <SidebarLabel>{item.title}</SidebarLabel>\r\n            </DropdownLink>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubMenu;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SidebarData';\r\nimport SubMenu from './SubMenu';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Nav = styled.div`\r\n  background: #131a22;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 10px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #131a22;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  transition: 150ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n  padding-top : 50px;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  text-align:justify;\r\n`;\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <Nav style={{width:\"100%\",height:\"70px\"}}>\r\n          <NavIcon to='#'>\r\n          <div className='navbar'>\r\n          <Link to='#' className='menu-bars'>\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n          </div>\r\n          </NavIcon>\r\n          <h4 style={{color:\"white\",float:\"right\",width:\"100%\",textAlign:'right',marginRight:\"35px\"}}><Link to=\"/login\" style={{color:\"white\"}}>login</Link></h4>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to='#'>\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n                if(item.title===\"Profile\")\r\n                {\r\n                  item.path=\"/userprofile/\"+props.currentUser\r\n                }\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps  =(state)=>{\r\n  return { \r\n    currentUser:state.userReducer.currentUser,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Sidebar);","import authHeader from '../services/auth-header'\r\n\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\"\r\nexport const UPDATE_ORDERS = \"UPDATE_ORDERS\"\r\nexport const ERROR_ORDERS = \"ERROR_ORDERS\"\r\nconst URL =\"http://localhost:8080/api/v1/orders/\";\r\n\r\nexport const fetchorders = (filter) => {\r\n    //add your code\r\n    console.log(\"*******ORDER********\"+filter);\r\n    return dispatch => {\r\n        fetch(URL+'?sort=email&' + filter , {\r\n            headers: authHeader()\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                //this.setState({ users: data.data })\r\n                console.log(data.total)\r\n                dispatch({ type: FETCH_ORDERS, payload: data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateorders = (_id,orderdetails) => {\r\n    //add your code\r\n    return dispatch => {\r\n        fetch(URL+_id,\r\n            {\r\n                method: 'PATCH',\r\n                headers: authHeader(),\r\n                body: JSON.stringify(orderdetails)\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                console.log(\"*************\"+data.success);\r\n                if (data.success === true) {\r\n                    // this.setState({ message: \"Successfully inserted\" })\r\n                    dispatch({ type: UPDATE_ORDERS, payload: data });\r\n                }\r\n                else{\r\n                    console.log(\"*************\"+data.success);\r\n                    dispatch({\r\n                        type: ERROR_ORDERS,\r\n                        payload: data.message\r\n                    });\r\n                }\r\n            })\r\n    }\r\n}","import { React, useState, useEffect } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useParams } from \"react-router-dom\"\r\nimport {connect} from 'react-redux';\r\nimport * as orderactions from '../action/order-action';\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '800px',\r\n        backgroundColor: 'black',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Ordermodel(props) {\r\n    console.log(props.order);\r\n    const classes = useStyles();\r\n    var [modalStyle] = useState(getModalStyle);\r\n    var [open, setOpen] = useState(false);\r\n    let { orderid } = useParams();\r\n    const [email, setemail] = useState(props.order.email);\r\n    var paytype = props.order.paymentStatus ? \"Online\" : \"COD\"\r\n    const [paymentType, setPayment] = useState(paytype);\r\n    const [dateTime, setDateTime] = useState(props.order.orderDate);\r\n    var addresses = props.order.address.houseNumber + \",\" + props.order.address.locality + \",\" + props.order.address.city + \",\" + props.order.address.state + ',' + props.order.address.country + ',' + props.order.address.pinCode;\r\n    const [address, setAddress] = useState(addresses);\r\n    // const [phonenumber, setContact] = useState(props.order.phonenumber);\r\n    const [amount, setAmount] = useState(props.order.amount);\r\n    const [bookname, setBookname] = useState('');\r\n    const [status, setStatus] = useState(props.order.status);\r\n\r\n    const [enable, setEnable] = useState(true)\r\n\r\n\r\n    const handleopen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const checkClose = () => {\r\n        handleClose();\r\n    }\r\n\r\n    const Update = async (e) => {\r\n        let roleData = {status: status }\r\n        console.log(roleData)\r\n        setEnable(true)\r\n        await props.updateorderbyid(props.order._id,roleData)\r\n        await props.onGetorders(\"\");\r\n    }\r\n    const Edit = (event) => {\r\n        console.log('Edit')\r\n        setEnable(false)\r\n    }\r\n\r\n    const onChangeRadio =(e)=>{\r\n        console.log(e.target.value);\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    var booklist = props.order.books.map((book, i) => {\r\n        return (\r\n            <>\r\n                <Col sm={3}>\r\n                    <Form.Control readOnly plaintext style={{\r\n                        border: '1px solid lightgrey',\r\n                        padding: '10px 15px',\r\n                        borderRadius: '5px',\r\n                        outline: 'none'\r\n                    }} type=\"text\" value={book.quantity} placeholder=\"Enter Bookname\">\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col sm={9}>\r\n                    <Form.Control readOnly plaintext style={{\r\n                        border: '1px solid lightgrey',\r\n                        padding: '10px 15px',\r\n                        borderRadius: '5px',\r\n                        outline: 'none'\r\n                    }} type=\"text\" value={book.isbn} placeholder=\"Enter Bookname\">\r\n                    </Form.Control>\r\n                </Col>\r\n            </>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" style={{ color: 'blue' }} onClick={handleopen}>{props.name.slice(props.name.length-6,props.name.length)}</button>\r\n            <Modal\r\n                open={open}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <Card className=\"border border-muted\" style={{\r\n                        padding: '10px 15px',\r\n                        margin: '15px auto',\r\n                        boxSizing: 'border-box',\r\n                        border: 'none',\r\n                        width: '90%',\r\n                        fontFamily: 'monospace',\r\n                        display: 'block'\r\n                    }}>\r\n                        <Card.Body>\r\n                            <i className=\"fas fa-times\" style={{ float: 'right' }} onClick={checkClose}></i>\r\n                            <Card.Title style={{\r\n                                textAlign: 'center',\r\n                                fontSize: '30px',\r\n                                marginBottom: '10%'\r\n                            }}>Order List </Card.Title>\r\n                            <Card.Text>\r\n\r\n                                {/* Disabled */}\r\n                                {enable &&\r\n                                    <Form>\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>email</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    textTransform: 'capitalize',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={email} placeholder=\"Enter Name\" />\r\n                                            </Col>\r\n\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Payment Type</Form.Label>\r\n                                            <Col sm={9}>\r\n\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"email\" value={paymentType} placeholder=\"Enter the type of payment\" />\r\n                                            </Col>\r\n\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Date Time</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={dateTime} placeholder=\"Enter Ordered Date and Time\" />\r\n                                            </Col>\r\n\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Address</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={address} placeholder=\"Enter Address\" />\r\n                                            </Col>\r\n\r\n                                        </Form.Group>\r\n\r\n                                        {/* <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Phone Number</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px'    ,\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={phonenumber} placeholder=\"Enter Contact Number\">\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Form.Group> */}\r\n\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Amount</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={amount} placeholder=\"Enter Amount\">\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={3}>Status</Form.Label>\r\n                                            <Col sm={9}>\r\n                                                <Form.Control readOnly plaintext style={{\r\n                                                    border: '1px solid lightgrey',\r\n                                                    padding: '10px 15px',\r\n                                                    borderRadius: '5px',\r\n                                                    outline: 'none'\r\n                                                }} type=\"text\" value={status} placeholder=\"Enter Status\">\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row} className=\"mb-3\" >\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={6}>Book Quantity</Form.Label>\r\n                                            <Form.Label style={{\r\n                                                // border: '1px solid lightgrey',\r\n                                                padding: '10px 15px',\r\n                                                textTransform: 'capitalize',\r\n                                                fontSize: '18px',\r\n                                                textAlign:'left'\r\n                                                // borderRadius: '5px',\r\n                                                // outline: 'none'\r\n\r\n                                            }} column sm={6}>Book ISBN</Form.Label>\r\n                                            {booklist}\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Row}>\r\n                                            <Col style={{ margin: 'auto' }} sm={6}>\r\n                                                <Button variant=\"primary\" block onClick={Edit}>EDIT</Button>\r\n                                            </Col>\r\n                                            {/* <Col sm={6}>\r\n                                        <Button disabled variant=\"primary\" block onClick={Update}>UPDATE</Button>\r\n                                    </Col> */}\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                }\r\n\r\n                                {/* Enabled */}\r\n                                {!enable && <Form>\r\n                                    <Form.Group as={Row} className=\"mb-3\" >\r\n                                        <Form.Label style={{\r\n                                            // border: '1px solid lightgrey',\r\n                                            padding: '10px 15px',\r\n                                            textTransform: 'capitalize',\r\n                                            fontSize: '18px'\r\n                                            // borderRadius: '5px',\r\n                                            // outline: 'none'\r\n\r\n                                        }} column sm={3}>Status</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            {/* <Form.Control type=\"text\" value={status} placeholder=\"Enter Name\" /> */}\r\n                                            {/* [\"new\", \"packed\",\"shipped\", \"completed\", \"cancelled\", \"delayed\"] */}\r\n                                            <Form>\r\n                                                    <div key='status' className=\"mb-3\" onChange={onChangeRadio}>\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='new'\r\n                                                            value='new'\r\n                                                        />\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='Shipped'\r\n                                                            value='shipped'\r\n                                                        />\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='Packed'\r\n                                                            value='packed'\r\n                                                        />\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='Completed'\r\n                                                            value='completed'\r\n                                                        />\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='Delayed'\r\n                                                            value='delayed'\r\n                                                        />\r\n                                                        <Form.Check\r\n                                                            type='radio'\r\n                                                            id='status'\r\n                                                            name=\"group1\"\r\n                                                            label='Cancelled'\r\n                                                            value='cancelled'\r\n                                                        />\r\n                                                    </div>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        {/* <Col sm={6}>\r\n                                    <Button disabled variant=\"primary\" block onClick={Edit}>EDIT</Button>\r\n                                </Col> */}\r\n                                        <Col style={{ margin: 'auto' }} sm={6}>\r\n                                            <Button variant=\"primary\" block onClick={Update}>UPDATE</Button>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                </Form>\r\n                                }\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateorderbyid: (id,orderdata)=>dispatch(orderactions.updateorders(id,orderdata)),\r\n        onGetorders: (filter)=>dispatch(orderactions.fetchorders(filter))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)( Ordermodel);","import { useEffect, useState } from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Table } from 'react-bootstrap'\r\nimport Ordermodel from './Ordermodel';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport * as orderactions from '../action/order-action';\r\n\r\nfunction Orderlist(props) {\r\n\r\n    // this.state = { users: [], word: '', active: 1, maxpage: 1, limit: 5, pageno: [1, 2, 3], open: false }\r\n    const [limit, setLimit] = useState(5)\r\n    // const [maxpage, setMaxpage] = useState(1)\r\n    const [pageno, setPageno] = useState([1, 2, 3])\r\n    const [active, setActive] = useState(1)\r\n\r\n\r\n    useEffect(async () => {\r\n        // await props.onGetorders(\"page=\" + active + \"&limit=\" + limit);\r\n        await getOrders()\r\n\r\n    }, [active])\r\n\r\n    async function updatepagination(current) {\r\n        console.log(\"current:****************************\" + current);\r\n        var max = 1;\r\n        max = (props.totalorders / limit)\r\n        console.log(\"*******************************Max******************\" + max);\r\n        console.log(props.totalorders);\r\n\r\n        // setMaxpage(max)\r\n        // console.log(maxpage);\r\n        if (current === 'initial') {\r\n            let temparrr = [1, 2, 3];\r\n            // await this.setState({ pageno: temparrr, active: 1 });\r\n            await setPageno(temparrr)\r\n            await setActive(1)\r\n        }\r\n        if (current === 'final') {\r\n            let temp = max > Math.floor(props.totalorders / limit) ? Math.floor(max) + 1 : Math.floor(max);\r\n            // let temp = max\r\n\r\n            let temparrr = [temp - 2, temp - 1, temp];\r\n            // await this.setState({ pageno: temparrr, active: temp });\r\n            await setPageno(temparrr)\r\n            await setActive(temp)\r\n        }\r\n        if (pageno[2] < max) {\r\n            if (current === \"next\") {\r\n                var temparr = [...pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] + 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                // await this.setState({ pageno: temparr, active: tempactive });\r\n                await setPageno(temparr)\r\n                await setActive(tempactive)\r\n            }\r\n        }\r\n        if (current === \"prev\") {\r\n            if (pageno[0] !== 1) {\r\n                var temparr = [...pageno];\r\n                for (let i = 0; i < temparr.length; i++) {\r\n                    temparr[i] = temparr[i] - 1;\r\n                }\r\n                let tempactive = temparr[0];\r\n                // await this.setState({ pageno: temparr, active: tempactive });\r\n                await setPageno(temparr)\r\n                await setActive(tempactive)\r\n            }\r\n        }\r\n    }\r\n    \r\n    async function changePage(pageNo) {\r\n        await setActive(pageNo)\r\n        console.log(\"****************************\" + pageNo);\r\n    }\r\n    async function getOrders() {\r\n        await props.onGetorders(\"page=\" + active + \"&limit=\" + limit);\r\n    }\r\n\r\n    const handleSelect = async (e) => {\r\n        console.log(\"&&&&&&&&&&&&&&&&&&&&\" + e);\r\n        if (e === 'all') {\r\n            await props.onGetorders(\"\");\r\n        }\r\n        else {\r\n            await props.onGetorders(\"status=\" + e);\r\n        }\r\n    }\r\n\r\n\r\n    let orderList1 = props.orders.map((data, i) => {\r\n        console.log(data.paymentStatus);\r\n        return (\r\n            <tr key={i}>\r\n                {/* <td><Link to={'/operations/' + data.id}>{data.id}</Link></td> */}\r\n                <td><a href='#'><Ordermodel name={data._id} order={data}></Ordermodel></a></td>\r\n                <td> {data.email} </td>\r\n                <td> {data.paymentStatus ? <span>Online</span> : <span>COD</span>} </td>\r\n                <td> {data.orderDate} </td>\r\n                <td> {data.status} </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    let items = pageno.map((no,i) => {\r\n        return (\r\n            <Pagination.Item key={i} onClick={() => changePage(no)} active={no === active}>\r\n                {no}\r\n            </Pagination.Item>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\" style={{ height: \"40px\" }}>\r\n                    <a className=\"navbar-brand\" href=\"#\">Order List</a>\r\n                    <DropdownButton\r\n                        alignRight\r\n                        title=\"Orders\"\r\n                        id=\"dropdown-menu-align-right\"\r\n                        style={{\r\n                            width: \"50px\"\r\n                        }}\r\n                        className=\"m-5\"\r\n                        onSelect={handleSelect}\r\n                    >\r\n                        <Dropdown.Item eventKey=\"all\">All Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"new\">New Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"packed\">Packed Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"shipped\">Shipped Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"completed\">Completed Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"delayed\">Delayed Order</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"cancelled\">Cancelled Order</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n            </nav>\r\n\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Order Id</th>\r\n                        <th>Email</th>\r\n                        <th>Payment Type</th>\r\n                        <th>Date Time</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderList1}\r\n                </tbody>\r\n            </Table>\r\n            <div>\r\n                <Pagination style={{ display: 'flex', width: '220px', margin: 'auto' }}>\r\n                    <Pagination.First onClick={() => updatepagination('initial')} />\r\n                    <Pagination.Prev onClick={() => updatepagination('prev')} />\r\n                    {items}\r\n                    <Pagination.Next onClick={() => updatepagination('next')} />\r\n                    <Pagination.Last onClick={() => updatepagination('final')} />\r\n                </Pagination>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.orderReducer.orders,\r\n        totalorders: state.orderReducer.totalorders\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetorders: (filter) => dispatch(orderactions.fetchorders(filter)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orderlist);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Updateuser from \"./components/Updateuser\";\n//import Login from \"./components/Login\";\nimport Userlist from \"./components/Userlist\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./components/Login\";\nimport Adduser from \"./components/Adduser\";\nimport UserProfile from \"./components/UserProfile\";\nimport Sidebar from './components/navbar/Sidebar';\nimport Ordermodel from \"./components/Ordermodel\";\nimport Orderlist from \"./components/Orderlist\";\n//import Register from \"./components/Register\";\n\nexport default function App() {\n  return (\n    <Router>\n      \n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Route path=\"/\" component={Sidebar}/>\n        <Switch>\n          <Route path=\"/userprofile/:id\" component={UserProfile}/>\n          <Route path=\"/adduser\" component={Adduser}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/userlist\" component={Userlist}/>\n          <Route path=\"/orderlist\" component={Orderlist}/>\n          <Route path=\"/updateuser/:id\" component={Updateuser}/>\n          <Route path=\"/ordermodel\" component={Ordermodel}/>\n        </Switch>\n    </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../action/user-action';\r\nlet initialState = {\r\n    users: [\r\n    ],\r\n    currentUser:\"\",\r\n    totaluser:\"\"\r\n}\r\n\r\n// Reducers in store to modify state -- don't directly manipulate state\r\nconst reducer = (state = initialState, action) =>{\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch(action.type){\r\n        case actions.FETCH_USERS:\r\n            return {\r\n                ...state,\r\n                message:\"\",\r\n                users: action.payload.data,\r\n                totaluser:action.payload.total,\r\n            }\r\n        case actions.UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                 users: action.payload,\r\n                 message: action.payload.message\r\n            }\r\n        case actions.LOGIN_USER:\r\n            return {\r\n                // users: action.payload\r\n                ...state,\r\n                currentUser:action.payload.userid,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ERROR_USER:\r\n            return {\r\n                // users: action.payload \r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ADD_USER:\r\n                return {\r\n                    ...state,\r\n                    message: action.payload.message\r\n                }\r\n        case actions.FILTER_USER:\r\n                return {\r\n                    ...state,\r\n                    users: action.payload.data\r\n                }\r\n        default : return state\r\n    }\r\n \r\n}\r\n\r\nexport default reducer;","import * as actions from '../action/auth-actions';\r\nlet initialState = {\r\n    authenticated: false\r\n}\r\n// Reducers in store to modify state -- don't directly manipulate state\r\nconst reducer = (state = initialState, action) =>{\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch(action.type){\r\n        case actions.USER_LOGIN:\r\n            return {\r\n                authenticated: action.payload\r\n            }       \r\n        default : return state\r\n    }\r\n\r\n}\r\nexport default reducer;","import * as actions from '../action/order-action';\r\nlet initialState = {\r\n    orders: [\r\n    ],\r\n    totalorders:\"\"\r\n}\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n    console.log('Action recieved at reducer***  ', action);\r\n    switch(action.type){\r\n        case actions.FETCH_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.data,\r\n                totalorders:action.payload.total\r\n            }\r\n        case actions.UPDATE_ORDERS:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        case actions.ERROR_ORDERS:\r\n            return {\r\n                // users: action.payload\r\n                ...state,\r\n                message: action.payload.message\r\n            }\r\n        default : return state\r\n    }\r\n \r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {applyMiddleware, combineReducers, createStore} from 'redux';\nimport userReducer from './store/user-reducer';\nimport authReducer from './store/auth-reducer';\nimport orderReducer from './store/order-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\n\n\nconst loggerMiddleware = storeAPI => next => action => {\n  console.log('dispatching', action)\n  let result = next(action)\n  console.log('next state', storeAPI.getState())\n  return result\n}\n\nconst myEnhancer = applyMiddleware(loggerMiddleware,thunkMiddleware)\nconst appStore = createStore(combineReducers({userReducer,authReducer,orderReducer}) , myEnhancer)\n\nwindow.store=appStore;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}